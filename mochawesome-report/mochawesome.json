{
  "stats": {
    "suites": 12,
    "tests": 27,
    "passes": 27,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-05T20:48:04.977Z",
    "end": "2021-10-05T20:48:06.901Z",
    "duration": 1924,
    "testsRegistered": 27,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94e0f14c-c220-46ec-94e3-6d28147a8ca5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e8058b6c-1266-41d3-9df1-6a40880fadd9",
          "title": "*********** AUTH ***********",
          "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
          "file": "\\test\\auth.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"*********** AUTH ***********\"",
              "fullTitle": "*********** AUTH *********** \"after all\" hook in \"*********** AUTH ***********\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createdID.forEach((email) => {\n    user.destroy({ where: { email } }).then()\n})",
              "err": {},
              "uuid": "f3c36fbe-97cb-4417-935c-95d5433269d6",
              "parentUUID": "e8058b6c-1266-41d3-9df1-6a40880fadd9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f8de2193-245a-4979-a6e3-b832f6bd5967",
              "title": "/GET /404url",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET 404 url",
                  "fullTitle": "*********** AUTH *********** /GET /404url it should GET 404 url",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/404url')\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.an('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "8f9c9881-5265-4286-848c-7d1c9002d3b2",
                  "parentUUID": "f8de2193-245a-4979-a6e3-b832f6bd5967",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f9c9881-5265-4286-848c-7d1c9002d3b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "b9f8f9e3-ec5b-49f7-acb7-8198d27045ec",
              "title": "/POST login",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET (token, user, permissions)",
                  "fullTitle": "*********** AUTH *********** /POST login it should GET (token, user, permissions)",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(loginDetails)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        token = res.body.token\n        done()\n    })",
                  "err": {},
                  "uuid": "12f1ddd0-d51b-4b56-861d-8333bb52a298",
                  "parentUUID": "b9f8f9e3-ec5b-49f7-acb7-8198d27045ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST user does not exist",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST user does not exist",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(userNotExist)\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "3db31820-609c-44c6-8dfb-a4c4263119c8",
                  "parentUUID": "b9f8f9e3-ec5b-49f7-acb7-8198d27045ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST wrong password",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST wrong password",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(wrongPassword)\n    .end((err, res) => {\n        res.should.have.status(403)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "115b680e-567d-415d-b294-4ed63b6d8a98",
                  "parentUUID": "b9f8f9e3-ec5b-49f7-acb7-8198d27045ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST login if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST login if data its empty",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "15cf4d29-ddfd-48d0-bdf7-46489a2c2162",
                  "parentUUID": "b9f8f9e3-ec5b-49f7-acb7-8198d27045ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12f1ddd0-d51b-4b56-861d-8333bb52a298",
                "3db31820-609c-44c6-8dfb-a4c4263119c8",
                "115b680e-567d-415d-b294-4ed63b6d8a98",
                "15cf4d29-ddfd-48d0-bdf7-46489a2c2162"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 496,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "6e0453d3-add2-4b49-afdb-c2d23b6d17e0",
              "title": "/POST register",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST register",
                  "fullTitle": "*********** AUTH *********** /POST register it should POST register",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('token', 'user', 'permissions')\n        createdID.push(res.body.user.email)\n        done()\n    })",
                  "err": {},
                  "uuid": "06530e83-9a7a-4e74-b01b-ab5475fdbbca",
                  "parentUUID": "6e0453d3-add2-4b49-afdb-c2d23b6d17e0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a register if email already exists",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST a register if email already exists",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userSend.email = 'admin@admin.com'\nchai\n    .request(server)\n    .post('/register')\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(400)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "a2fa6948-49c6-42f7-89f3-3a2949b510b2",
                  "parentUUID": "6e0453d3-add2-4b49-afdb-c2d23b6d17e0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST register if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST register if data its empty",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "93144a3c-de2a-40d0-8434-3da7e5fa1609",
                  "parentUUID": "6e0453d3-add2-4b49-afdb-c2d23b6d17e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06530e83-9a7a-4e74-b01b-ab5475fdbbca",
                "a2fa6948-49c6-42f7-89f3-3a2949b510b2",
                "93144a3c-de2a-40d0-8434-3da7e5fa1609"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "be4c4527-dc05-41af-9ac5-eb94d50be357",
              "title": "/GET token",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** AUTH *********** /GET token it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "14cf2c31-b0a0-46da-8286-34e6a5fc0121",
                  "parentUUID": "be4c4527-dc05-41af-9ac5-eb94d50be357",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET a fresh token",
                  "fullTitle": "*********** AUTH *********** /GET token it should GET a fresh token",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "0146b330-0c54-4e19-8fff-128b19ac1095",
                  "parentUUID": "be4c4527-dc05-41af-9ac5-eb94d50be357",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "14cf2c31-b0a0-46da-8286-34e6a5fc0121",
                "0146b330-0c54-4e19-8fff-128b19ac1095"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "67f31beb-389d-4fd5-8254-ebd895a03249",
          "title": "*********** USERS ***********",
          "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
          "file": "\\test\\user.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"*********** USERS ***********\"",
              "fullTitle": "*********** USERS *********** \"after all\" hook in \"*********** USERS ***********\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createdID.forEach((id) => {\n    user.destroy({ where: { id } }).then()\n})",
              "err": {},
              "uuid": "f2d65d9f-1913-4c30-8e32-c37df471f29f",
              "parentUUID": "67f31beb-389d-4fd5-8254-ebd895a03249",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3c501b92-d8ba-402d-ba91-c5bd22145113",
              "title": "/POST login",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET token",
                  "fullTitle": "*********** USERS *********** /POST login it should GET token",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(loginDetails)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        token = res.body.token\n        done()\n    })",
                  "err": {},
                  "uuid": "d0d9fa8b-4504-4b07-a5c6-8f386520d1ea",
                  "parentUUID": "3c501b92-d8ba-402d-ba91-c5bd22145113",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0d9fa8b-4504-4b07-a5c6-8f386520d1ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "fb56020e-b787-4032-9d40-fdd4e08828f6",
              "title": "/GET users",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** USERS *********** /GET users it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/users')\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "09f1812e-48d8-4469-9e43-dfed27f0c9d5",
                  "parentUUID": "fb56020e-b787-4032-9d40-fdd4e08828f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET all the users",
                  "fullTitle": "*********** USERS *********** /GET users it should GET all the users",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/users')\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(200)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('docs', 'totalDocs', 'page', 'totalPages')\n        res.body.docs.should.be.a('array')\n        res.body.totalDocs.should.be.a('number')\n        res.body.page.should.be.a('number')\n        res.body.totalPages.should.be.a('number')\n        res.body.docs[0].name.should.be.a('string')\n        res.body.docs[0].lastname.should.be.a('string')\n        res.body.docs[0].email.should.be.a('string')\n        res.body.docs[0].createdAt.should.be.a('string')\n        res.body.docs[0].updatedAt.should.be.a('string')\n        res.body.docs[0].roleU.should.be.a('object')\n        res.body.docs[0].id.should.be.a('number')\n        res.body.docs[0].roleId.should.be.a('number')\n        res.body.docs[0].roleU.should.include.keys('name', 'description', 'createdAt', 'updatedAt')\n        done()\n    })",
                  "err": {},
                  "uuid": "eb53bb10-1882-4d8c-b12a-d136c24a2b41",
                  "parentUUID": "fb56020e-b787-4032-9d40-fdd4e08828f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET the users with filters",
                  "fullTitle": "*********** USERS *********** /GET users it should GET the users with filters",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get(`/users?${queryParams}`)\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(200)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('docs', 'totalDocs', 'page', 'totalPages')\n        res.body.docs.should.be.a('array')\n        res.body.totalDocs.should.be.a('number')\n        res.body.page.should.be.a('number')\n        res.body.totalPages.should.be.a('number')\n        res.body.docs[0].name.should.be.a('string')\n        res.body.docs[0].lastname.should.be.a('string')\n        res.body.docs[0].email.should.be.a('string')\n        res.body.docs[0].createdAt.should.be.a('string')\n        res.body.docs[0].updatedAt.should.be.a('string')\n        res.body.docs[0].roleU.should.be.a('object')\n        res.body.docs[0].id.should.be.a('number')\n        res.body.docs[0].roleId.should.be.a('number')\n        res.body.docs[0].roleU.should.include.keys('name', 'description', 'createdAt', 'updatedAt')\n        res.body.docs[0].should.have.property('email').eql('admin@admin.com')\n        done()\n    })",
                  "err": {},
                  "uuid": "f35a0970-201b-40ef-a24a-fc14457ba39c",
                  "parentUUID": "fb56020e-b787-4032-9d40-fdd4e08828f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09f1812e-48d8-4469-9e43-dfed27f0c9d5",
                "eb53bb10-1882-4d8c-b12a-d136c24a2b41",
                "f35a0970-201b-40ef-a24a-fc14457ba39c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "c04791e6-a92b-4971-aeeb-43e6b666959c",
              "title": "/POST user",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** USERS *********** /POST user it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/users')\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "316369a0-f996-4a1e-956f-52f3643cefd5",
                  "parentUUID": "c04791e6-a92b-4971-aeeb-43e6b666959c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST user if data its empty",
                  "fullTitle": "*********** USERS *********** /POST user it should NOT POST user if data its empty",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/users')\n    .set('Authorization', `Bearer ${token}`)\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "a4ed5f8c-82e7-4943-b85f-8c724ef5a076",
                  "parentUUID": "c04791e6-a92b-4971-aeeb-43e6b666959c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST a user",
                  "fullTitle": "*********** USERS *********** /POST user it should POST a user",
                  "timedOut": false,
                  "duration": 234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/users')\n    .set('Authorization', `Bearer ${token}`)\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('id', 'name', 'lastname', 'roleId', 'email', 'updatedAt', 'createdAt')\n        res.body.id.should.be.a('number')\n        res.body.roleId.should.be.a('number')\n        res.body.name.should.be.a('string')\n        res.body.lastname.should.be.a('string')\n        res.body.email.should.be.a('string')\n        res.body.createdAt.should.be.a('string')\n        res.body.updatedAt.should.be.a('string')\n        createdID.push(res.body.id)\n        done()\n    })",
                  "err": {},
                  "uuid": "af0b9b0f-0ffa-48bd-82e7-08536fbb6408",
                  "parentUUID": "c04791e6-a92b-4971-aeeb-43e6b666959c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a user with email that already exists",
                  "fullTitle": "*********** USERS *********** /POST user it should NOT POST a user with email that already exists",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userSend.email = 'admin@admin.com'\nchai\n    .request(server)\n    .post('/users')\n    .set('Authorization', `Bearer ${token}`)\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(400)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "e58bab5f-a633-4101-a6e2-c7924159829a",
                  "parentUUID": "c04791e6-a92b-4971-aeeb-43e6b666959c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "316369a0-f996-4a1e-956f-52f3643cefd5",
                "a4ed5f8c-82e7-4943-b85f-8c724ef5a076",
                "af0b9b0f-0ffa-48bd-82e7-08536fbb6408",
                "e58bab5f-a633-4101-a6e2-c7924159829a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 419,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "1fb276aa-b975-42c5-902a-258acec5d5f7",
              "title": "/GET/:id user",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** USERS *********** /GET/:id user it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = createdID[0]\nchai\n    .request(server)\n    .get(`/users/${id}`)\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "7ab94cae-35be-47bb-9a2e-8a40a96b679a",
                  "parentUUID": "1fb276aa-b975-42c5-902a-258acec5d5f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT GET a user if id is not exist",
                  "fullTitle": "*********** USERS *********** /GET/:id user it should NOT GET a user if id is not exist",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/users/10')\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "bff8469b-89c2-4efa-b4bf-4a43128e571d",
                  "parentUUID": "1fb276aa-b975-42c5-902a-258acec5d5f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET a user by the given id",
                  "fullTitle": "*********** USERS *********** /GET/:id user it should GET a user by the given id",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = createdID[0]\nchai\n    .request(server)\n    .get(`/users/${id}`)\n    .set('Authorization', `Bearer ${token}`)\n    .end((error, res) => {\n        res.should.have.status(200)\n        res.body.should.be.a('object')\n        res.body.should.have.property('id').eql(id)\n        res.body.should.include.keys('id', 'name', 'lastname', 'roleId', 'roleU', 'email', 'updatedAt', 'createdAt')\n        res.body.roleU.should.include.keys('name', 'description', 'createdAt', 'updatedAt')\n        res.body.id.should.be.a('number')\n        res.body.roleId.should.be.a('number')\n        res.body.name.should.be.a('string')\n        res.body.lastname.should.be.a('string')\n        res.body.email.should.be.a('string')\n        res.body.createdAt.should.be.a('string')\n        res.body.updatedAt.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "0ff2a352-6cd8-48c5-8ea5-ebe0e1cc15bb",
                  "parentUUID": "1fb276aa-b975-42c5-902a-258acec5d5f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ab94cae-35be-47bb-9a2e-8a40a96b679a",
                "bff8469b-89c2-4efa-b4bf-4a43128e571d",
                "0ff2a352-6cd8-48c5-8ea5-ebe0e1cc15bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "2916ecde-9447-4cd4-961c-a7c9c97f68b3",
              "title": "/PATCH/:id user",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** USERS *********** /PATCH/:id user it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .patch('/users/1')\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "c41a79fc-4a96-4e8c-a739-08bc22ba7860",
                  "parentUUID": "2916ecde-9447-4cd4-961c-a7c9c97f68b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT PATCH user if data its empty",
                  "fullTitle": "*********** USERS *********** /PATCH/:id user it should NOT PATCH user if data its empty",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = createdID[0]\nchai\n    .request(server)\n    .patch(`/users/${id}`)\n    .set('Authorization', `Bearer ${token}`)\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "2ee7e8c6-825f-4f7d-a124-fc46f5538259",
                  "parentUUID": "2916ecde-9447-4cd4-961c-a7c9c97f68b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should UPDATE a user given the id",
                  "fullTitle": "*********** USERS *********** /PATCH/:id user it should UPDATE a user given the id",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = createdID[0]\nuserSend.name = 'user admin'\nconst { password, email, ...data } = userSend\nchai\n    .request(server)\n    .patch(`/users/${id}`)\n    .set('Authorization', `Bearer ${token}`)\n    .send(data)\n    .end((error, res) => {\n        res.should.have.status(201)\n        res.body.should.be.a('object')\n        res.body.should.have.property('id').eql(id)\n        res.body.should.have.property('name').eql('user admin')\n        res.body.should.include.keys('id', 'name', 'lastname', 'roleId', 'email', 'updatedAt', 'createdAt')\n        res.body.id.should.be.a('number')\n        res.body.roleId.should.be.a('number')\n        res.body.name.should.be.a('string')\n        res.body.lastname.should.be.a('string')\n        res.body.email.should.be.a('string')\n        res.body.createdAt.should.be.a('string')\n        res.body.updatedAt.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "a9e502cb-3416-406c-8613-235023f328ce",
                  "parentUUID": "2916ecde-9447-4cd4-961c-a7c9c97f68b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT UPDATE a user with email that already exists",
                  "fullTitle": "*********** USERS *********** /PATCH/:id user it should NOT UPDATE a user with email that already exists",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = createdID[0]\nuserSend.email = 'admin@admin.com'\nchai\n    .request(server)\n    .patch(`/users/${id}`)\n    .set('Authorization', `Bearer ${token}`)\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(400)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "63254b4f-972a-4368-8118-0b0b21b3ad82",
                  "parentUUID": "2916ecde-9447-4cd4-961c-a7c9c97f68b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c41a79fc-4a96-4e8c-a739-08bc22ba7860",
                "2ee7e8c6-825f-4f7d-a124-fc46f5538259",
                "a9e502cb-3416-406c-8613-235023f328ce",
                "63254b4f-972a-4368-8118-0b0b21b3ad82"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 75,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "cbf61786-858f-43da-9e32-31f864e87518",
              "title": "/DELETE/:id user",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\user.js",
              "file": "\\test\\user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** USERS *********** /DELETE/:id user it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .delete('/users/1')\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "b5399f59-a6a2-4b04-b3dd-2cbbe7ad3dd2",
                  "parentUUID": "cbf61786-858f-43da-9e32-31f864e87518",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should DELETE a user given the id",
                  "fullTitle": "*********** USERS *********** /DELETE/:id user it should DELETE a user given the id",
                  "timedOut": false,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userSend.email = 'user@user.com'\nchai\n    .request(server)\n    .post('/users')\n    .set('Authorization', `Bearer ${token}`)\n    .send(userSend)\n    .end((err, res) => {\n        res.should.have.status(201)\n        chai\n            .request(server)\n            .delete(`/users/${res.body.id}`)\n            .set('Authorization', `Bearer ${token}`)\n            .end((error, result) => {\n                result.should.have.status(200)\n                done()\n            })\n    })",
                  "err": {},
                  "uuid": "d3206dd6-3859-4915-be0d-f87e14b55d47",
                  "parentUUID": "cbf61786-858f-43da-9e32-31f864e87518",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5399f59-a6a2-4b04-b3dd-2cbbe7ad3dd2",
                "d3206dd6-3859-4915-be0d-f87e14b55d47"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 182,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.0"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}