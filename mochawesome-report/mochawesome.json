{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-04T21:59:07.488Z",
    "end": "2021-10-04T21:59:08.426Z",
    "duration": 938,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7e14c24c-53e9-4da9-ba8e-6de503f0774b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "775cb9ba-fc14-43b9-9f8d-6bae8adadc49",
          "title": "*********** AUTH ***********",
          "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
          "file": "\\test\\auth.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"*********** AUTH ***********\"",
              "fullTitle": "*********** AUTH *********** \"after all\" hook in \"*********** AUTH ***********\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createdID.forEach(async (id) => {\n    await User.destroy({ where: { id } })\n})",
              "err": {},
              "uuid": "79ad14fa-2e35-41f0-9c85-dbd34d79d677",
              "parentUUID": "775cb9ba-fc14-43b9-9f8d-6bae8adadc49",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0405f5b9-30b0-4651-9d67-34bcba6a859e",
              "title": "/GET /404url",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET 404 url",
                  "fullTitle": "*********** AUTH *********** /GET /404url it should GET 404 url",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/404url')\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.an('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "be284036-6323-423a-a9ca-01d386b9f36f",
                  "parentUUID": "0405f5b9-30b0-4651-9d67-34bcba6a859e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be284036-6323-423a-a9ca-01d386b9f36f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "f36fa923-9019-4b2a-aa90-ee898224d7fe",
              "title": "/POST login",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET (token, user, permissions)",
                  "fullTitle": "*********** AUTH *********** /POST login it should GET (token, user, permissions)",
                  "timedOut": false,
                  "duration": 300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(loginDetails)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        token = res.body.token\n        done()\n    })",
                  "err": {},
                  "uuid": "410f714c-3592-4bbe-9ff4-a0da4aef430c",
                  "parentUUID": "f36fa923-9019-4b2a-aa90-ee898224d7fe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST user does not exist",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST user does not exist",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(userNotExist)\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "ce747b54-b533-4ba6-9866-9b663ad2070c",
                  "parentUUID": "f36fa923-9019-4b2a-aa90-ee898224d7fe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST wrong password",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST wrong password",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(wrongPassword)\n    .end((err, res) => {\n        res.should.have.status(403)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "c7bd201a-8a83-4ed3-bbf7-9d2da65b2082",
                  "parentUUID": "f36fa923-9019-4b2a-aa90-ee898224d7fe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST login if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST login if data its empty",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        console.log(res.body)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "4ca92921-ea05-4608-ba71-53fad56133c8",
                  "parentUUID": "f36fa923-9019-4b2a-aa90-ee898224d7fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "410f714c-3592-4bbe-9ff4-a0da4aef430c",
                "ce747b54-b533-4ba6-9866-9b663ad2070c",
                "c7bd201a-8a83-4ed3-bbf7-9d2da65b2082",
                "4ca92921-ea05-4608-ba71-53fad56133c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 479,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "76441f1d-47ab-44f6-86cd-b978eabf30a4",
              "title": "/POST register",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST register",
                  "fullTitle": "*********** AUTH *********** /POST register it should POST register",
                  "timedOut": false,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('token', 'user', 'permissions')\n        createdID.push(res.body.user.id)\n        done()\n    })",
                  "err": {},
                  "uuid": "83daa458-9f19-4a03-b028-15b50f0ee551",
                  "parentUUID": "76441f1d-47ab-44f6-86cd-b978eabf30a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a register if email already exists",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST a register if email already exists",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "user.email = 'admin@admin.com'\nchai\n    .request(server)\n    .post('/register')\n    .send(user)\n    .end((err, res) => {\n        console.log(res.body)\n        res.should.have.status(400)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "eaf9947d-48c2-4bc3-9e43-80e90a7053cb",
                  "parentUUID": "76441f1d-47ab-44f6-86cd-b978eabf30a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST register if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST register if data its empty",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "57fc9dcf-f853-40f0-b122-374413ad1a59",
                  "parentUUID": "76441f1d-47ab-44f6-86cd-b978eabf30a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83daa458-9f19-4a03-b028-15b50f0ee551",
                "eaf9947d-48c2-4bc3-9e43-80e90a7053cb",
                "57fc9dcf-f853-40f0-b122-374413ad1a59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 348,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "5660dd20-f33e-46a0-a5b5-7fc3fd1a45e8",
              "title": "/GET token",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** AUTH *********** /GET token it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "3721c3c6-ea00-4215-9984-e1d1be4ea630",
                  "parentUUID": "5660dd20-f33e-46a0-a5b5-7fc3fd1a45e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET a fresh token",
                  "fullTitle": "*********** AUTH *********** /GET token it should GET a fresh token",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "13e65571-0144-4e80-8a65-d64922d4794f",
                  "parentUUID": "5660dd20-f33e-46a0-a5b5-7fc3fd1a45e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3721c3c6-ea00-4215-9984-e1d1be4ea630",
                "13e65571-0144-4e80-8a65-d64922d4794f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.0"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}