{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-05T15:40:00.076Z",
    "end": "2021-10-05T15:40:01.083Z",
    "duration": 1007,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8dc813ac-7872-481a-aca5-8bcbcddfef59",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f08a5550-ec47-4fd0-b9d3-98b6ef3680a8",
          "title": "*********** AUTH ***********",
          "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
          "file": "\\test\\auth.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"*********** AUTH ***********\"",
              "fullTitle": "*********** AUTH *********** \"after all\" hook in \"*********** AUTH ***********\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createdID.forEach(async (id) => {\n    await User.destroy({ where: { id } })\n})",
              "err": {},
              "uuid": "40442301-6e64-482b-b22a-c4bfdf0089ff",
              "parentUUID": "f08a5550-ec47-4fd0-b9d3-98b6ef3680a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e92dad39-3f60-49a9-bc9b-f1edfa476ede",
              "title": "/GET /404url",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET 404 url",
                  "fullTitle": "*********** AUTH *********** /GET /404url it should GET 404 url",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/404url')\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.an('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "21a2bea3-f180-4c89-8738-60ad0f70ec7a",
                  "parentUUID": "e92dad39-3f60-49a9-bc9b-f1edfa476ede",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21a2bea3-f180-4c89-8738-60ad0f70ec7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "feb99048-4b03-4301-becf-ec598d19ad2c",
              "title": "/POST login",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET (token, user, permissions)",
                  "fullTitle": "*********** AUTH *********** /POST login it should GET (token, user, permissions)",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(loginDetails)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        token = res.body.token\n        done()\n    })",
                  "err": {},
                  "uuid": "f4bd7fc3-2aa8-4dfd-84a7-ca2eb3e1dfbc",
                  "parentUUID": "feb99048-4b03-4301-becf-ec598d19ad2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST user does not exist",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST user does not exist",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(userNotExist)\n    .end((err, res) => {\n        res.should.have.status(404)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "044fc543-0cf2-4703-894d-0df308f6cf0c",
                  "parentUUID": "feb99048-4b03-4301-becf-ec598d19ad2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST wrong password",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST wrong password",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send(wrongPassword)\n    .end((err, res) => {\n        res.should.have.status(403)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "5cac6c7f-3dbf-4384-8d90-18f629440525",
                  "parentUUID": "feb99048-4b03-4301-becf-ec598d19ad2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST login if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST login it should NOT POST login if data its empty",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/login')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.include.keys('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "13b61d80-0480-44e7-a870-aa37eb62cfa4",
                  "parentUUID": "feb99048-4b03-4301-becf-ec598d19ad2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4bd7fc3-2aa8-4dfd-84a7-ca2eb3e1dfbc",
                "044fc543-0cf2-4703-894d-0df308f6cf0c",
                "5cac6c7f-3dbf-4384-8d90-18f629440525",
                "13b61d80-0480-44e7-a870-aa37eb62cfa4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 481,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "910b919d-be8e-43cd-bc12-690390dc38a2",
              "title": "/POST register",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST register",
                  "fullTitle": "*********** AUTH *********** /POST register it should POST register",
                  "timedOut": false,
                  "duration": 247,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(201)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('token', 'user', 'permissions')\n        createdID.push(res.body.user.id)\n        done()\n    })",
                  "err": {},
                  "uuid": "bdb4d6f7-b32b-45fd-b974-f092ec5117bf",
                  "parentUUID": "910b919d-be8e-43cd-bc12-690390dc38a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST a register if email already exists",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST a register if email already exists",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "user.email = 'admin@admin.com'\nchai\n    .request(server)\n    .post('/register')\n    .send(user)\n    .end((err, res) => {\n        res.should.have.status(400)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('string')\n        done()\n    })",
                  "err": {},
                  "uuid": "ba02bcac-bc12-4f6a-af94-33679faa3a48",
                  "parentUUID": "910b919d-be8e-43cd-bc12-690390dc38a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should NOT POST register if data its empty",
                  "fullTitle": "*********** AUTH *********** /POST register it should NOT POST register if data its empty",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .post('/register')\n    .send({})\n    .end((err, res) => {\n        res.should.have.status(422)\n        res.body.should.be.a('object')\n        res.body.should.have.property('errors')\n        res.body.errors.msg.should.be.a('array')\n        done()\n    })",
                  "err": {},
                  "uuid": "ca4544db-e8b0-4d69-8601-070dc9ec8135",
                  "parentUUID": "910b919d-be8e-43cd-bc12-690390dc38a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bdb4d6f7-b32b-45fd-b974-f092ec5117bf",
                "ba02bcac-bc12-4f6a-af94-33679faa3a48",
                "ca4544db-e8b0-4d69-8601-070dc9ec8135"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 412,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            },
            {
              "uuid": "e6c1c93e-9794-4eb6-a281-0024457d9b48",
              "title": "/GET token",
              "fullFile": "C:\\Users\\artur\\Desktop\\TRABAJOS\\BE BETTER\\enligthneering\\api\\test\\auth.js",
              "file": "\\test\\auth.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should NOT be able to consume the route since no token was sent",
                  "fullTitle": "*********** AUTH *********** /GET token it should NOT be able to consume the route since no token was sent",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .end((err, res) => {\n        res.should.have.status(401)\n        done()\n    })",
                  "err": {},
                  "uuid": "b1c3a9d7-1834-4c9c-a0de-2dd4533cd652",
                  "parentUUID": "e6c1c93e-9794-4eb6-a281-0024457d9b48",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET a fresh token",
                  "fullTitle": "*********** AUTH *********** /GET token it should GET a fresh token",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/token')\n    .set('Authorization', `Bearer ${token}`)\n    .end((err, res) => {\n        res.should.have.status(202)\n        res.body.should.be.an('object')\n        res.body.should.include.keys('permissions', 'token', 'user')\n        res.body.permissions.should.be.a('array')\n        res.body.token.should.be.a('string')\n        res.body.user.should.be.a('object')\n        done()\n    })",
                  "err": {},
                  "uuid": "647486fe-0b02-4f9d-939d-f5377e16fa79",
                  "parentUUID": "e6c1c93e-9794-4eb6-a281-0024457d9b48",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1c3a9d7-1834-4c9c-a0de-2dd4533cd652",
                "647486fe-0b02-4f9d-939d-f5377e16fa79"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 15000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.0"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}